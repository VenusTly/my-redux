{"ast":null,"code":"var _jsxFileName = \"/Users/tanluyang/Desktop/personal/my-redux/my-redux/render.tsx\";\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { createMiddleware } from './middleware';\nimport { createReducers } from './store';\nimport { models } from './init';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let store;\nexport const render = (element, container, callback) => {\n  const middleware = createMiddleware();\n  const reducer = createReducers(models);\n  store = createStore(reducer, undefined, applyMiddleware(middleware));\n  return ReactDom.render( /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: element\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this), container, callback);\n};","map":{"version":3,"sources":["/Users/tanluyang/Desktop/personal/my-redux/my-redux/render.tsx"],"names":["React","ReactDom","Provider","createStore","applyMiddleware","createMiddleware","createReducers","models","store","render","element","container","callback","middleware","reducer","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,MAAT,QAAuB,QAAvB;;AAGA,OAAO,IAAIC,KAAJ;AAEP,OAAO,MAAMC,MAAM,GAAG,CAACC,OAAD,EAAuBC,SAAvB,EAAsDC,QAAtD,KAA+E;AACnG,QAAMC,UAAU,GAAGR,gBAAgB,EAAnC;AACA,QAAMS,OAAO,GAAGR,cAAc,CAACC,MAAD,CAA9B;AACAC,EAAAA,KAAK,GAAGL,WAAW,CAACW,OAAD,EAAUC,SAAV,EAAqBX,eAAe,CAACS,UAAD,CAApC,CAAnB;AACA,SAAOZ,QAAQ,CAACQ,MAAT,eACL,QAAC,QAAD;AAAU,IAAA,KAAK,EAAID,KAAnB;AAAA,cACGE;AADH;AAAA;AAAA;AAAA;AAAA,UADK,EAILC,SAJK,EAKLC,QALK,CAAP;AAOD,CAXM","sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { createMiddleware } from './middleware'\nimport { createReducers } from './store'\nimport { models } from './init'\n \n\nexport let store: any\n\nexport const render = (element: JSX.Element, container: HTMLElement | null, callback?: () => any) => {\n  const middleware = createMiddleware()\n  const reducer = createReducers(models)\n  store = createStore(reducer, undefined, applyMiddleware(middleware))\n  return ReactDom.render(\n    <Provider store = {store}>\n      {element}\n    </Provider>,\n    container,\n    callback\n  )\n}"]},"metadata":{},"sourceType":"module"}